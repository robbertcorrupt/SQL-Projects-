---Retrieve the total number of orders placed.

Select count(Order_id) as Total_orders from orders;

---Calculate the total revenue generated from pizza sales.
SELECT SUM(order_details.quantity * pizzas.price)AS Total_Revenue
FROM order_details 
JOIN pizzas ON pizzas.pizza_id = order_details.pizza_id;

-- Identify the highest-priced pizza.
Select pizza_types.pizza_name, pizzas.price
from pizza_types join pizzas
on pizza_types.pizza_type_id=pizzas.pizza_type_id
order by pizzas.price desc limit 1;

--Identify the most common pizza size ordered.
Select quantity, count(order_details_id)
from order_details
group by quantity

--Identify the most common pizza size ordered.
select pizzas.size, count(order_details.order_details_id) as order_count
from pizzas join order_details on pizzas.pizza_id = order_details.pizza_id
group by pizzas.size 
order by order_count desc;

---List the top 5 most ordered pizza types along with their quantities.
Select pizza_types.pizza_name, sum(order_details.quantity) as quantity
from pizza_types join pizzas
on pizza_types.pizza_type_id = pizzas.pizza_type_id
join order_details
on order_details.pizza_id = pizzas.pizza_id
group by pizza_types.pizza_name order by quantity desc limit 5

--Join the necessary tables to find the total quantity of each pizza category ordered.
Select sum(order_details.quantity) as quantity, Pizza_types.category
from pizza_types
join pizzas on pizza_types.pizza_type_id = pizzas.pizza_type_id
join order_details
on order_details.pizza_id = pizzas.pizza_id
group by Pizza_types.category order by quantity desc 

--Determine the distribution of orders by hour of the day.
SELECT 
    EXTRACT(HOUR FROM order_time) AS order_hour, 
    COUNT(order_id) AS orders 
FROM 
    orders 
GROUP BY 
    EXTRACT(HOUR FROM order_time) 
ORDER BY 
    orders DESC;

--Join relevant tables to find the category-wise distribution of pizzas.
Select category, count(pizza_name) pizzas from pizza_types
group by category order by pizzas desc 

--Group the orders by date and calculate the average number of pizzas ordered per day.
Select avg(quantity) as Avg_pizzas_order_per_day from 
(Select orders.order_date, sum(order_details.quantity) as quantity
from orders join order_details
on orders.order_id = order_details.order_id
group by orders.order_date)

--Determine the top 3 most ordered pizza types based on revenue.
Select pizza_types.pizza_name as Pizza_types, SUM(order_details.quantity * pizzas.price)AS Total_Revenue
from  pizza_types join pizzas
on pizzas.pizza_type_id = pizza_types.pizza_type_id
join order_details
on order_details.pizza_id = pizzas.pizza_id
group by pizza_types order by total_revenue desc limit 3;


--Calculate the percentage contribution of each pizza type to total revenue.
SELECT 
    pizza_types.category AS category, 
    SUM(order_details.quantity * pizzas.price) AS total_revenue,
    (SUM(order_details.quantity * pizzas.price) / 
        (SELECT SUM(order_details.quantity * pizzas.price) 
         FROM order_details 
         JOIN pizzas ON pizzas.pizza_id = order_details.pizza_id) 
     * 100) AS revenue_percentage
FROM 
    pizza_types 
JOIN 
    pizzas ON pizzas.pizza_type_id = pizza_types.pizza_type_id
JOIN 
    order_details ON order_details.pizza_id = pizzas.pizza_id
GROUP BY 
    pizza_types.category
ORDER BY 
    total_revenue DESC;

--Analyze the cumulative revenue generated over time.

select Order_date, sum(revenue) over(order by order_date) as cum_revenue from
(select Orders.order_date, SUM(order_details.quantity * pizzas.price)as revenue
	from order_details join pizzas
on order_details.pizza_id = pizzas.pizza_id
	join orders on
orders.order_id = order_details.order_id
	group by orders.order_date) as Sales


--Determine the top 3 most ordered pizza types based
--on revenue for each pizza category.

SELECT pizza_name, revenue 
FROM (
    SELECT category, pizza_name, revenue, 
           RANK() OVER (PARTITION BY category ORDER BY revenue DESC) AS rn 
    FROM (
        SELECT pizza_types.category, pizza_types.pizza_name,
               SUM(order_details.quantity * pizzas.price) AS revenue
        FROM pizza_types 
        JOIN pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id 
        JOIN order_details ON order_details.pizza_id = pizzas.pizza_id
        GROUP BY pizza_types.category, pizza_types.pizza_name
    ) AS a
) AS b
WHERE rn <= 3;

